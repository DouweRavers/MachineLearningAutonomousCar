import numpy as np

Y = []
X = []
with open('data.csv') as csvDataFile:
    csvReader = csv.reader(csvDataFile, delimiter=";")
    for row in csvReader:
        if row[0] == "input":
            continue
        row = [value.replace(",", ".") for value in row]
        Y.append(row[0])
        X.append(row[1:])
Y = np.array(Y).astype(float)
Y = Y * 0.5 + 0.5
X = np.array(X).astype(float)

#X = np.random.rand(100, 5)
np.random.shuffle(X)
X_training, X_test = X[:70,:], X[70:, ;]

#Y = np.random.rand(100, 5)
np.random.shuffle(Y)
Y_training, Y_test = Y[:70, :], Y[70:, :]

#Learn parameter theta using training set 
#main_learn.nn_params

initial_nn_params = neural_network.randInitializeWeights()
options = {'maxiter': 100}
lambda_ = 1

def costFunction(nn_params): return neural_network.costfunction(
    nn_params, X_train, Y_train, lambda_)

res = optimize.minimize(costFunction,
                        initial_nn_params,
                        jac=True,
                        method='TNC',
                        options=options)

nn_params = res.x

#compute misclassification error
h_test = neural_network.calculate2(
        nn_params, X_test)

m_test = X_test.size()
i = 0
error = 0

for h in h_test:
    i += 1
    if (h >= 0.5) {
        if (Y_test[i] == 1) {
            error += 1
        }
    } else {
        if (Y_test[i] == 0) {
            error += 1
        }
    }

error = (1/m_test)*error

    